{"version":3,"sources":["serviceWorker.js","reducers/listForm.js","reducers/mealForm.js","reducers/index.js","reducers/locationReducer.js","reducers/currentUser.js","reducers/myLists.js","reducers/myMeals.js","store.js","history.js","actions/mealForm.js","actions/types.js","actions/myMeals.js","components/meals/MealForm.js","components/meals/NewMealFormWrapper.js","components/meals/EditMealFormWrapper.js","components/lists/ListCard.js","components/meals/MealCard.js","components/restaurants/SearchBar.js","components/restaurants/Restaurant.js","apis/GoogleMaps.js","components/restaurants/FetchRestaurants.js","components/recipes/RecipeSearch.js","components/recipes/Recipe.js","components/recipes/FetchRecipes.js","actions/listForm.js","actions/myLists.js","actions/currentUser.js","components/user/Logout.js","components/Header.js","components/user/Login.js","components/user/SignUp.js","components/lists/MyLists.js","components/Footer.js","components/Home.js","components/lists/ListForm.js","components/lists/NewListFormWrapper.js","components/lists/EditListFormWrapper.js","components/Modal.js","components/lists/ListDelete.js","components/meals/MealDelete.js","App.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","initalState","name","description","kind","meal_type","url","meal_date","combineReducers","action","type","currentUser","user","myLists","lists","concat","list","map","id","filter","listId","myMeals","meals","meal","mealId","ListForm","returnVal","formData","value","listFormData","MealForm","mealFormData","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","createBrowserHistory","resetMealForm","getMyMeals","dispatch","fetch","credentials","method","headers","res","json","response","alert","data","createMeal","mealData","sendableMealData","user_id","userId","list_id","body","JSON","stringify","history","push","deleteMeal","deleteMealSuccess","connect","updateMealForm","handleSubmit","editMode","handleChange","event","target","className","onSubmit","onChange","placeholder","autoComplete","required","recipe","preventDefault","EditMealFormWrapper","props","updateMeal","renderedMeal","uuid","pulledRecipe","this","mealType","attributes","title","source_url","date","format","Date","setFormDataForEdit","prevProps","to","React","Component","ListCard","scrollTo","query","listMeals","key","withRouter","MealCard","style","width","href","rel","SearchBar","term","restaurants","e","setState","search","restaurant","height","src","image_url","alt","limit","newTitle","length","split","reduce","acc","cur","join","limitRestaurantTitle","display_phone","address1","city","zip_code","rating","review_count","Dropdown","text","Menu","l","pathname","GoogleMaps","handleApiLoaded","maps","myPosition","lat","latitude","lng","longitude","Marker","position","defaultCenter","defaultZoom","yesIWantToUseGoogleMapApiInternals","onGoogleApiLoaded","coordinates","myHeaders","Headers","append","process","requestOptions","redirect","FetchRestaurants","fetchYelpApi","result","businesses","RecipeSearch","recipes","recipe_id","publisher","FetchRecipes","fetchRecipes","resetListForm","getMyLists","deleteList","deleteListSuccess","setCurrentUser","logout","Header","handleMenuToggle","isClicked","handleLogout","onClick","color","fontSize","borderStyle","exact","activeClassName","loggedIn","AuthForm","email","password","handleOnChange","handleOnSubmit","login","SignUp","signup","MyLists","listCards","Footer","class","Home","updateListForm","createList","listData","sendableListData","EditListFormWrapper","updateList","Modal","ReactDOM","createPortal","onDismiss","stopPropagation","content","actions","document","querySelector","ListDelete","renderActions","renderContent","MealDelete","App","getCurrentUser","getUserCoords","path","component","Login","Signup","NewListFormWrapper","render","find","params","geolocation","getCurrentPosition","coords","err","errorMessage","message","getElementById","URL","origin","addEventListener","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.7728b999.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","let initalState = {\n  name: \"\",\n  description: \"\",\n};\n\nexport default (state = initalState, action) => {\n  switch (action.type) {\n    case \"UPDATE_LIST_FORM\":\n      const returnVal = {\n        ...state,\n        [action.formData.name]: action.formData.value,\n      };\n      return returnVal;\n    case \"RESET_LIST_FORM\":\n      return initalState;\n    case \"SET_LIST_FORM_DATA_FOR_EDIT\":\n      return action.listFormData;\n    default:\n      return state;\n  }\n};\n","let initalState = {\n  name: \"\",\n  kind: \"\",\n  meal_type: \"\",\n  description: \"\",\n  url: \"\",\n  meal_date: \"\",\n};\n\nexport default (state = initalState, action) => {\n  switch (action.type) {\n    case \"UPDATE_MEAL_FORM\":\n      const returnVal = {\n        ...state,\n        [action.formData.name]: action.formData.value,\n      };\n      return returnVal;\n    case \"RESET_MEAL_FORM\":\n      return initalState;\n    case \"SET_MEAL_FORM_DATA_FOR_EDIT\":\n      return action.mealFormData;\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport locationReducer from \"./locationReducer\";\nimport currentUser from \"./currentUser\";\nimport myLists from \"./myLists\";\nimport myMeals from \"./myMeals\";\nimport ListForm from \"./listForm\";\nimport MealForm from \"./mealForm\";\n\nexport default combineReducers({\n  location: locationReducer,\n  currentUser,\n  myLists,\n  myMeals,\n  ListForm,\n  MealForm,\n});\n","export default (state = null, action) => {\n  switch (action.type) {\n    case \"GET_USER_LOCATION\":\n      return {\n        ...state,\n        location: action.location,\n      };\n    default:\n      return state;\n  }\n};\n","export default (state = null, action) => {\n  switch (action.type) {\n    case \"SET_CURRENT_USER\":\n      return {\n        ...state,\n        currentUser: action.user,\n      };\n    case \"CLEAR_CURRENT_USER\":\n      return null;\n\n    default:\n      return state;\n  }\n};\n","export default (state = [], action) => {\n  switch (action.type) {\n    case \"SET_MY_LISTS\":\n      return action.lists;\n    case \"ADD_LIST\":\n      return state.concat(action.list);\n    case \"UPDATE_LIST\":\n      return state.map((list) =>\n        list.id === action.list.id ? action.list : list\n      );\n    case \"DELETE_LIST\":\n      return state.filter((list) => (list.id === action.listId ? false : true));\n    case \"CLEAR_LISTS\":\n      return [];\n    default:\n      return state;\n  }\n};\n","export default (state = null, action) => {\n  switch (action.type) {\n    case \"SET_MY_MEALS\":\n      return action.meals;\n    case \"ADD_MEAL\":\n      return state.concat(action.meal);\n    case \"UPDATE_MEAL\":\n      return state.map((meal) =>\n        meal.id === action.meal.id ? action.meal : meal\n      );\n    case \"DELETE_MEAL\":\n      return state.filter((meal) => (meal.id === action.mealId ? false : true));\n    case \"CLEAR_MEALS\":\n      return null;\n    default:\n      return state;\n  }\n};\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport reduxThunk from \"redux-thunk\";\nimport reducers from \"./reducers\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  reducers,\n  composeEnhancers(applyMiddleware(reduxThunk))\n);\n\nexport default store;\n","import { createBrowserHistory } from \"history\";\n\nexport default createBrowserHistory();\n","import {\n  UPDATE_MEAL_FORM,\n  RESET_MEAL_FORM,\n  SET_MEAL_FORM_DATA_FOR_EDIT,\n} from \"./types\";\n\n// synchronous\nexport const updateMealForm = (name, value) => {\n  const formData = { name, value };\n  return {\n    type: UPDATE_MEAL_FORM,\n    formData,\n  };\n};\n\nexport const resetMealForm = () => {\n  return {\n    type: RESET_MEAL_FORM,\n  };\n};\n\nexport const setFormDataForEdit = (meal) => {\n  const mealFormData = {\n    name: meal.attributes.name,\n    kind: meal.attributes.kind,\n    meal_type: meal.attributes.meal_type,\n    description: meal.attributes.description,\n    url: meal.attributes.url,\n    meal_date: meal.attributes.meal_date,\n  };\n  return {\n    type: SET_MEAL_FORM_DATA_FOR_EDIT,\n    mealFormData,\n  };\n};\n","// index\nexport const SIGN_IN = \"SIGN_IN\";\nexport const SIGN_OUT = \"SIGN_OUT\";\nexport const GET_COORDS = \"GET_COORDS\";\n\n// currentUser\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\nexport const CLEAR_CURRENT_USER = \"CLEAR_CURRENT_USER\";\n\n// listForm\nexport const UPDATE_LIST_FORM = \"UPDATE_LIST_FORM\";\nexport const RESET_LIST_FORM = \"RESET_LIST_FORM\";\nexport const SET_LIST_FORM_DATA_FOR_EDIT = \"SET_LIST_FORM_DATA_FOR_EDIT\";\n\n// location\nexport const GET_USER_LOCATION = \"GET_USER_LOCATION\";\n\n// mealForm\nexport const UPDATE_MEAL_FORM = \"UPDATE_MEAL_FORM\";\nexport const RESET_MEAL_FORM = \"RESET_MEAL_FORM\";\nexport const SET_MEAL_FORM_DATA_FOR_EDIT = \"SET_MEAL_FORM_DATA_FOR_EDIT\";\n\n// myLists\nexport const SET_MY_LISTS = \"SET_MY_LISTS\";\nexport const CLEAR_LISTS = \"CLEAR_LISTS\";\nexport const ADD_LIST = \"ADD_LIST\";\nexport const DELETE_LIST = \"DELETE_LIST\";\nexport const UPDATE_LIST = \"UPDATE_LIST\";\n\n// myMeals\nexport const SET_MY_MEALS = \"SET_MY_MEALS\";\nexport const CLEAR_MEALS = \"CLEAR_MEALS\";\nexport const ADD_MEAL = \"ADD_MEAL\";\nexport const DELETE_MEAL = \"DELETE_MEAL\";\nexport const UPDATE_MEAL = \"UPDATE_MEAL\";\n","import history from \"../history\";\nimport { resetMealForm } from \"./mealForm\";\nimport {\n  SET_MY_MEALS,\n  CLEAR_MEALS,\n  ADD_MEAL,\n  DELETE_MEAL,\n  UPDATE_MEAL,\n} from \"./types\";\n\nexport const setMyMeals = (meals) => {\n  return {\n    type: SET_MY_MEALS,\n    meals,\n  };\n};\n\nexport const clearMeals = () => {\n  return {\n    type: CLEAR_MEALS,\n  };\n};\n\nexport const addMeal = (meal) => {\n  return {\n    type: ADD_MEAL,\n    meal,\n  };\n};\n\nexport const deleteMealSuccess = (mealId) => {\n  return {\n    type: DELETE_MEAL,\n    mealId,\n  };\n};\n\nexport const updateMealSuccess = (meal) => {\n  return {\n    type: UPDATE_MEAL,\n    meal,\n  };\n};\n\n// Asynchronous actions\n\nexport const getMyMeals = () => {\n  return (dispatch) => {\n    return fetch(\"https://thawing-gorge-41253.herokuapp.com/api/v1/meals\", {\n      credentials: \"include\",\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .then((response) => {\n        if (response.error) {\n          alert(response.error);\n        } else {\n          dispatch(setMyMeals(response.data));\n        }\n      })\n      .catch(console.log);\n  };\n};\n\nexport const createMeal = (mealData) => {\n  return (dispatch) => {\n    const sendableMealData = {\n      name: mealData.name,\n      kind: mealData.kind,\n      meal_type: mealData.meal_type,\n      description: mealData.description,\n      url: mealData.url,\n      meal_date: mealData.meal_date,\n      user_id: mealData.userId,\n      list_id: mealData.listId,\n    };\n    return fetch(\"https://thawing-gorge-41253.herokuapp.com/api/v1/meals\", {\n      credentials: \"include\",\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(sendableMealData),\n    })\n      .then((res) => res.json())\n      .then((response) => {\n        if (response.error) {\n          alert(response.error);\n        } else {\n          dispatch(addMeal(response.data));\n          dispatch(resetMealForm());\n          history.push(`/meals/${response.data.id}`);\n          // Go somewhere else ---> meal show\n          // add the new meal to the store\n        }\n      })\n      .catch(console.log);\n  };\n};\n\nexport const updateMeal = (mealData) => {\n  return (dispatch) => {\n    const sendableMealData = {\n      name: mealData.name,\n      kind: mealData.kind,\n      meal_type: mealData.meal_type,\n      description: mealData.description,\n      url: mealData.url,\n      meal_date: mealData.meal_date,\n    };\n    return fetch(\n      `https://thawing-gorge-41253.herokuapp.com/api/v1/meals/${mealData.mealId}`,\n      {\n        credentials: \"include\",\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(sendableMealData),\n      }\n    )\n      .then((res) => res.json())\n      .then((response) => {\n        if (response.error) {\n          alert(response.error);\n        } else {\n          dispatch(updateMealSuccess(response.data));\n          history.push(`/meals/${response.data.id}`);\n          // Go somewhere else ---> meal show\n          // add the new meal to the store\n        }\n      })\n      .catch(console.log);\n  };\n};\n\nexport const deleteMeal = (mealId) => {\n  return (dispatch) => {\n    return fetch(\n      `https://thawing-gorge-41253.herokuapp.com/api/v1/meals/${mealId}`,\n      {\n        credentials: \"include\",\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    )\n      .then((res) => res.json())\n      .then((response) => {\n        if (response.error) {\n          alert(response.error);\n        } else {\n          dispatch(deleteMealSuccess(mealId));\n          history.push(\"/lists\");\n          // Go somewhere else ---> meal show\n          // add the new meal to the store\n        }\n      })\n      .catch(console.log);\n  };\n};\n","import React from \"react\";\nimport { updateMealForm } from \"../../actions/mealForm\";\nimport { connect } from \"react-redux\";\n\nconst MealForm = ({ formData, updateMealForm, handleSubmit, editMode }) => {\n  const { name, kind, meal_type, description, url, meal_date } = formData;\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    updateMealForm(name, value);\n  };\n\n  return (\n    <form\n      className=\"ui form\"\n      onSubmit={(event) => handleSubmit(event, formData)}\n    >\n      <input\n        name=\"name\"\n        onChange={handleChange}\n        value={name}\n        placeholder=\"Name\"\n        autoComplete=\"off\"\n        required\n      />\n      <br />\n      <br />\n      <input\n        name=\"kind\"\n        onChange={handleChange}\n        value={kind}\n        placeholder=\"Restaurant or Recipe?\"\n        autoComplete=\"off\"\n      />\n      <br />\n      <br />\n      <input\n        name=\"meal_type\"\n        onChange={handleChange}\n        value={meal_type}\n        placeholder=\"Breakfast, Brunch, Lunch, Snack or Dinner?\"\n        autoComplete=\"off\"\n      />\n      <br />\n      <br />\n      <input\n        name=\"description\"\n        onChange={handleChange}\n        value={description}\n        placeholder=\"Description\"\n        autoComplete=\"off\"\n      />\n      <br />\n      <br />\n      <input\n        name=\"url\"\n        onChange={handleChange}\n        value={url}\n        placeholder=\"Link to Recipe or Restaurant?\"\n        autoComplete=\"off\"\n      />\n      <br />\n      <br />\n      <input\n        type=\"date\"\n        name=\"meal_date\"\n        onChange={handleChange}\n        value={meal_date}\n        placeholder=\"Date\"\n        autoComplete=\"off\"\n      />\n      <br />\n      <br />\n      <button className=\"ui primary button\" type=\"submit\">\n        {editMode ? \"Add Meal\" : \"Create Meal\"}\n      </button>\n    </form>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const userId = state.currentUser ? state.currentUser.currentUser.data.id : \"\";\n  return {\n    formData: state.MealForm,\n    userId,\n  };\n};\n\nexport default connect(mapStateToProps, { updateMealForm })(MealForm);\n","import React from \"react\";\nimport { createMeal } from \"../../actions/myMeals\";\nimport { connect } from \"react-redux\";\nimport MealForm from \"./MealForm\";\n\nconst NewMealFormWrapper = ({ createMeal, listId, userId, recipe }) => {\n  const handleSubmit = (event, formData) => {\n    event.preventDefault();\n    createMeal({\n      ...formData,\n      userId,\n      listId,\n    });\n  };\n\n  return (\n    <div>\n      <MealForm recipe={recipe} listId={listId} handleSubmit={handleSubmit} />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const userId = state.currentUser ? state.currentUser.currentUser.data.id : \"\";\n  return {\n    userId,\n  };\n};\n\nexport default connect(mapStateToProps, { createMeal })(NewMealFormWrapper);\n","import React from \"react\";\nimport { updateMeal, deleteMeal, createMeal } from \"../../actions/myMeals\";\nimport { setFormDataForEdit, resetMealForm } from \"../../actions/mealForm\";\nimport { connect } from \"react-redux\";\nimport MealForm from \"./MealForm\";\nimport { v1 as uuid } from \"uuid\";\nimport { Link } from \"react-router-dom\";\nimport { format } from \"date-fns\";\n\nclass EditMealFormWrapper extends React.Component {\n  componentDidMount() {\n    if (this.props.mealType === \"recipe\") {\n      let meal = {\n        attributes: {\n          name: this.props.renderedMeal.title,\n          meal_type: \"\",\n          kind: \"recipe\",\n          description: \"\",\n          url: this.props.renderedMeal.source_url,\n          date: format(new Date(), \"MM-dd-yyyy\"),\n        },\n      };\n      meal && this.props.setFormDataForEdit(meal);\n    } else if (this.props.mealType === \"restaurant\") {\n      let meal = {\n        attributes: {\n          name: this.props.renderedMeal.name,\n          meal_type: \"\",\n          kind: \"restaurant\",\n          description: \"\",\n          url: this.props.renderedMeal.url,\n          date: format(new Date(), \"MM-dd-yyyy\"),\n        },\n      };\n      meal && this.props.setFormDataForEdit(meal);\n    } else {\n      this.props.meal && this.props.setFormDataForEdit(this.props.meal);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    this.props.meal &&\n      !prevProps.meal &&\n      this.props.setFormDataForEdit(this.props.meal);\n  }\n\n  componentWillUnmount() {\n    this.props.resetMealForm();\n  }\n\n  handleSubmit = (event, formData) => {\n    const { updateMeal, createMeal, meal, userId, listId } = this.props;\n    let mealId = !this.props.renderedMeal ? meal.id : uuid();\n    event.preventDefault();\n    if (this.props.pulledRecipe === true) {\n      createMeal({\n        ...formData,\n        mealId,\n        userId,\n        listId,\n      });\n    } else {\n      updateMeal({\n        ...formData,\n        mealId,\n        userId,\n      });\n    }\n  };\n\n  render() {\n    const { meal } = this.props;\n    const mealId = meal ? meal.id : null;\n    return (\n      <div>\n        <>\n          <MealForm\n            editMode\n            renderedMeal={this.props.renderedMeal}\n            handleSubmit={this.handleSubmit}\n          />\n          <br />\n          <Link\n            className=\"ui negative button\"\n            meal={meal}\n            to={`/meals/delete/${mealId}`}\n          >\n            <h5>Delete this meal</h5>\n          </Link>\n        </>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const userId = state.currentUser ? state.currentUser.currentUser.data.id : \"\";\n  return {\n    userId,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateMeal,\n  setFormDataForEdit,\n  resetMealForm,\n  deleteMeal,\n  createMeal,\n})(EditMealFormWrapper);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport NewMealFormWrapper from \"../meals/NewMealFormWrapper\";\nimport EditMealFormWrapper from \"../meals/EditMealFormWrapper\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router\";\nimport { getMyMeals } from \"../../actions/myMeals\";\n\nclass ListCard extends Component {\n  componentDidMount() {\n    window.scrollTo(0, 0);\n  }\n\n  render() {\n    const renderedMeal = this.props.location.query\n      ? this.props.location.query.renderedMeal\n      : null;\n    const mealType = this.props.location.query\n      ? this.props.location.query.mealType\n      : null;\n    const { list } = this.props;\n\n    const meals =\n      list && this.props.myMeals\n        ? this.props.myMeals.filter(\n            (meal) => meal.attributes.list.id == this.props.listId\n          )\n        : null;\n\n    const listMeals =\n      list && meals\n        ? meals.map((meal) => (\n            <li key={meal.id}>\n              <Link to={`/meals/${meal.id}`}>\n                <h5>{meal.attributes.name}</h5>\n              </Link>\n            </li>\n          ))\n        : null;\n\n    return this.props.list ? (\n      <div>\n        <div className=\"ui one column grid\">\n          <div className=\"column\">\n            <div className=\"ui fluid card\">\n              <div className=\"content\">\n                <div className=\"header\">\n                  <h3>{list.attributes.name}</h3>\n                </div>\n                <h4>Restaurants and Recipes:</h4>\n                <ul>{listMeals}</ul>\n              </div>\n            </div>\n            <Link\n              className=\"ui primary button\"\n              list={list}\n              to={`/lists/${list.id}/edit`}\n            >\n              <h5>Edit this list</h5>\n            </Link>\n          </div>\n        </div>\n        <h1>Add a new meal to this list:</h1>\n        {renderedMeal ? (\n          <EditMealFormWrapper\n            pulledRecipe\n            mealType={mealType}\n            renderedMeal={renderedMeal}\n            list={list}\n            listId={list.id}\n          />\n        ) : (\n          <NewMealFormWrapper\n            mealType={mealType}\n            renderedMeal={renderedMeal}\n            listId={list.id}\n          />\n        )}\n      </div>\n    ) : (\n      <p>This is the list card with no list!</p>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    myMeals: state.myMeals,\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, { getMyMeals })(ListCard));\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { format } from \"date-fns\";\n\nclass MealCard extends Component {\n  componentDidMount() {\n    window.scrollTo(0, 0);\n  }\n\n  render() {\n    const { meal } = this.props;\n    return meal ? (\n      <div className=\"ui centered card\" style={{ width: \"500px\" }}>\n        <div className=\"center aligned content\">\n          <div className=\"header\">\n            <h2>{meal.attributes.name}</h2>\n          </div>\n          <div className=\"meta\">\n            <p>{meal.attributes.kind}</p>\n          </div>\n          <div className=\"description\">\n            <ul>\n              <h4>{meal.attributes.meal_type}</h4>\n              <h4>{meal.attributes.description}</h4>\n              <h4>\n                {format(new Date(meal.attributes.meal_date), \"MM-dd-yyyy\")}\n              </h4>\n              <h5>\n                <a\n                  href={meal.attributes.url}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  Website\n                </a>\n              </h5>\n              <Link to={`/lists/${meal.attributes.list_id}`}>\n                <h5>List: {meal.attributes.list.name}</h5>\n              </Link>\n            </ul>\n          </div>\n        </div>\n        <div className=\"center aligned extra content\">\n          <Link className=\"ui button primary\" to={`/meals/${meal.id}/edit`}>\n            <h5>Edit this meal</h5>\n          </Link>\n        </div>\n      </div>\n    ) : (\n      <p>This is the meal card with no meal!</p>\n    );\n  }\n}\n\nexport default MealCard;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nclass SearchBar extends React.Component {\n  state = {\n    term: \"\",\n    restaurants: [],\n  };\n\n  handleChange = (e) => {\n    this.setState({\n      term: e.target.value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.search(this.state.term);\n  };\n\n  render() {\n    return (\n      <div className=\"search-bar ui segment\">\n        <form onSubmit={this.handleSubmit} className=\"ui form\">\n          <div className=\"field\">\n            <label>Enter Restaurant Name</label>\n            <input\n              type=\"text\"\n              value={this.state.term}\n              onChange={this.handleChange}\n            />\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    location: state.location,\n  };\n};\n\nexport default connect(mapStateToProps)(SearchBar);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { Dropdown } from \"semantic-ui-react\";\n\nconst limitRestaurantTitle = (title, limit = 17) => {\n  const newTitle = [];\n  if (title.length > limit) {\n    title.split(\" \").reduce((acc, cur) => {\n      if (acc + cur.length <= limit) {\n        newTitle.push(cur);\n      }\n      return acc + cur.length;\n    }, 0);\n\n    // return the result\n    return `${newTitle.join(\" \")} ...`;\n  }\n  return title;\n};\n\nconst Restaurant = (props) => {\n  let restaurants = props.restaurants.map((restaurant) => (\n    <div className=\"column\" key={restaurant.id}>\n      <div className=\"ui fluid card\" style={{ height: \"800px\" }}>\n        <div className=\"image\">\n          <img\n            style={{ height: \"400px\" }}\n            src={restaurant.image_url}\n            alt={restaurant.name}\n          />\n        </div>\n\n        <div className=\"content\">\n          <a\n            className=\"header\"\n            href={restaurant.url}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <h3>{limitRestaurantTitle(restaurant.name)}</h3>\n          </a>\n          <div className=\"description\">\n            <h5>Phone Number: {restaurant.display_phone}</h5>\n            <h5>\n              Address: {restaurant.location.address1} {restaurant.location.city}{\" \"}\n              {restaurant.location.state} {restaurant.location.zip_code}\n            </h5>\n          </div>\n\n          <div className=\"extra\">\n            <h5>\n              Rating: {restaurant.rating} ({restaurant.review_count} reviews)\n            </h5>\n          </div>\n        </div>\n\n        <Dropdown className=\"ui button primary\" text=\"Add to list\">\n          <Dropdown.Menu className=\"menu\">\n            {props.lists.map((l) => (\n              <Link\n                className=\"item\"\n                key={l.id}\n                to={{\n                  pathname: `/lists/${l.id}`,\n                  query: { renderedMeal: restaurant, mealType: \"restaurant\" },\n                }}\n              >\n                {l.attributes.name}\n              </Link>\n            ))}\n          </Dropdown.Menu>\n        </Dropdown>\n      </div>\n    </div>\n  ));\n\n  return <div className=\"ui four column grid\">{restaurants}</div>;\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    lists: state.myLists,\n  };\n};\n\nexport default connect(mapStateToProps)(Restaurant);\n","import React from \"react\";\nimport GoogleMapReact from \"google-map-react\";\n// import { mapsKey } from './config';\nimport { connect } from \"react-redux\";\n\nclass GoogleMaps extends React.Component {\n  handleApiLoaded = (map, maps) => {\n    const myPosition = {\n      lat: this.props.location.location.latitude,\n      lng: this.props.location.location.longitude,\n    };\n    new maps.Marker({\n      position: myPosition,\n      map,\n      title: \"Here I am!\",\n    });\n  };\n\n  render() {\n    const lat = this.props.location\n      ? this.props.location.location.latitude\n      : null;\n    const lng = this.props.location\n      ? this.props.location.location.longitude\n      : null;\n\n    // const restLocations = this.props.restaurants.map(res => { return {lat: res.coordinates.latitude, lng: res.coordinates.longitude}})\n\n    const Marker = (props) => {\n      return (\n        <div>\n          <button className=\"restaurant-marker\">\n            <img\n              style={{ height: \"50px\", width: \"50px\" }}\n              src=\"src/img/pin.png\"\n              alt=\"Food-Mood\"\n            />\n            <div className=\"marker-text\">\n              <strong>{props.name}</strong>\n            </div>\n          </button>\n        </div>\n      );\n    };\n\n    if (this.props.location) {\n      return (\n        <div style={{ height: \"100vh\", width: \"100%\", position: \"relative\" }}>\n          <GoogleMapReact\n            // bootstrapURLKeys={{ key: process.env.MAPS_KEY}}\n            defaultCenter={{ lat, lng }}\n            defaultZoom={11}\n            yesIWantToUseGoogleMapApiInternals\n            onGoogleApiLoaded={({ map, maps }) =>\n              this.handleApiLoaded(map, maps)\n            }\n          >\n            {this.props.restaurants.map((restaurant) => (\n              <Marker\n                key={restaurant.id}\n                lat={restaurant.coordinates.latitude}\n                lng={restaurant.coordinates.longitude}\n                name={restaurant.name}\n              >\n                <button className=\"restaurant-marker\">\n                  <img src=\"src/img/pin.png\" alt=\"Food-Mood\" />\n                </button>\n              </Marker>\n            ))}\n          </GoogleMapReact>\n        </div>\n      );\n    }\n    return <div>Loading your location</div>;\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    location: state.location,\n  };\n};\n\nexport default connect(mapStateToProps)(GoogleMaps);\n","import React from \"react\";\nimport SearchBar from \"./SearchBar\";\n// import { requestOptions } from '../../apis/config'\nimport { connect } from \"react-redux\";\nimport Restaurant from \"./Restaurant\";\nimport GoogleMaps from \"../../apis/GoogleMaps\";\n\nconst myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", process.env.REACT_APP_MY_HEADER_AUTH);\nmyHeaders.append(\"Cookie\", process.env.REACT_APP_MY_HEADER_COOKIE);\n\nconst requestOptions = {\n  method: \"GET\",\n  headers: myHeaders,\n  redirect: \"follow\",\n};\n\nclass FetchRestaurants extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      restaurants: [],\n    };\n  }\n\n  fetchYelpApi = (term) => {\n    fetch(\n      `https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?term=${term}&latitude=${this.props.location.location.latitude}&longitude=${this.props.location.location.longitude}`,\n      requestOptions\n    )\n      .then((response) => response.json())\n      .then((result) => {\n        this.setState({\n          restaurants: result.businesses,\n        });\n      })\n      .catch((error) => console.log(\"error\", error));\n  };\n\n  componentDidUpdate(prevProps) {\n    if (this.props.location !== prevProps.location) {\n      this.fetchYelpApi();\n    }\n  }\n\n  render() {\n    if (!this.state.restaurants) {\n      return (\n        <div>\n          <h5>Search Restaurants Near You</h5>\n          <SearchBar search={this.fetchYelpApi} />\n          <br />\n          <GoogleMaps restaurants={this.state.restaurants} />\n        </div>\n      );\n    }\n    return (\n      <div>\n        <h5>Search Restaurants Near You</h5>\n        <SearchBar search={this.fetchYelpApi} />\n        <Restaurant restaurants={this.state.restaurants} />\n        <br />\n        <GoogleMaps restaurants={this.state.restaurants} />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    location: state.location,\n  };\n};\n\nexport default connect(mapStateToProps)(FetchRestaurants);\n","import React from \"react\";\n\nclass RecipeSearch extends React.Component {\n  state = {\n    query: \"\",\n  };\n\n  handleChange = (e) => {\n    this.setState({\n      query: e.target.value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.search(this.state.query);\n  };\n\n  render() {\n    return (\n      <div className=\"search-bar ui segment\">\n        <form onSubmit={this.handleSubmit} className=\"ui form\">\n          <div className=\"field\">\n            <label>Enter Recipe Name</label>\n            <input\n              type=\"text\"\n              value={this.state.term}\n              onChange={this.handleChange}\n            />\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default RecipeSearch;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { Dropdown } from \"semantic-ui-react\";\n\nconst Recipe = (props) => {\n  let recipes = props.recipes.map((recipe) => (\n    <div className=\"column\" key={recipe.recipe_id}>\n      <div className=\"ui fluid card\" style={{ height: \"800px\" }}>\n        <div className=\"image\">\n          <img\n            style={{ height: \"500px\" }}\n            src={recipe.image_url}\n            alt={recipe.title}\n          />\n        </div>\n\n        <div className=\"content\">\n          <a\n            className=\"header\"\n            href={recipe.source_url}\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            <h3>{recipe.title}</h3>\n          </a>\n          <div className=\"description\">\n            <h5>Published by: {recipe.publisher}</h5>\n          </div>\n        </div>\n\n        <Dropdown className=\"ui button primary\" text=\"Add to list\">\n          <Dropdown.Menu className=\"menu\">\n            {props.lists.map((l) => (\n              <Link\n                className=\"item\"\n                key={l.id}\n                to={{\n                  pathname: `/lists/${l.id}`,\n                  query: { renderedMeal: recipe, mealType: \"recipe\" },\n                }}\n              >\n                {l.attributes.name}\n              </Link>\n            ))}\n          </Dropdown.Menu>\n        </Dropdown>\n      </div>\n    </div>\n  ));\n\n  return <div className=\"ui four column grid\">{recipes}</div>;\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    lists: state.myLists,\n  };\n};\n\nexport default connect(mapStateToProps)(Recipe);\n","import React from \"react\";\nimport RecipeSearch from \"./RecipeSearch\";\nimport { connect } from \"react-redux\";\nimport Recipe from \"./Recipe\";\n\nclass FetchRecipes extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      recipes: [],\n    };\n  }\n\n  fetchRecipes = (query) => {\n    fetch(`https://forkify-api.herokuapp.com/api/search?&q=${query}`)\n      .then((res) => res.json())\n      .then((result) =>\n        this.setState({\n          recipes: result.recipes,\n        })\n      );\n  };\n\n  render() {\n    if (!this.state.recipes) {\n      return (\n        <div>\n          <h5>Search Recipes</h5>\n          <RecipeSearch search={this.fetchRecipes} />\n        </div>\n      );\n    }\n    return (\n      <div>\n        <h5>Search Recipes</h5>\n        <RecipeSearch search={this.fetchRecipes} />\n        <Recipe recipes={this.state.recipes} />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    location: state.location,\n  };\n};\n\nexport default connect(mapStateToProps)(FetchRecipes);\n","import {\n  UPDATE_LIST_FORM,\n  RESET_LIST_FORM,\n  SET_LIST_FORM_DATA_FOR_EDIT,\n} from \"./types\";\n\n// synchronous\nexport const updateListForm = (name, value) => {\n  const formData = { name, value };\n  return {\n    type: UPDATE_LIST_FORM,\n    formData,\n  };\n};\n\nexport const resetListForm = () => {\n  return {\n    type: RESET_LIST_FORM,\n  };\n};\n\nexport const setFormDataForEdit = (list) => {\n  const listFormData = {\n    name: list.attributes.name,\n    description: list.attributes.description,\n  };\n  return {\n    type: SET_LIST_FORM_DATA_FOR_EDIT,\n    listFormData,\n  };\n};\n","import history from \"../history\";\nimport { resetListForm } from \"./listForm\";\nimport {\n  SET_MY_LISTS,\n  CLEAR_LISTS,\n  ADD_LIST,\n  DELETE_LIST,\n  UPDATE_LIST,\n} from \"./types\";\n\nexport const setMyLists = (lists) => {\n  return {\n    type: SET_MY_LISTS,\n    lists,\n  };\n};\n\nexport const clearLists = () => {\n  return {\n    type: CLEAR_LISTS,\n  };\n};\n\nexport const addList = (list) => {\n  return {\n    type: ADD_LIST,\n    list,\n  };\n};\n\nexport const deleteListSuccess = (listId) => {\n  return {\n    type: DELETE_LIST,\n    listId,\n  };\n};\n\nexport const updateListSuccess = (list) => {\n  return {\n    type: UPDATE_LIST,\n    list,\n  };\n};\n\n// Asynchronous actions\n\nexport const getMyLists = () => {\n  return (dispatch) => {\n    return fetch(\"https://thawing-gorge-41253.herokuapp.com/api/v1/lists\", {\n      credentials: \"include\",\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .then((response) => {\n        if (response.error) {\n          alert(response.error);\n        } else {\n          dispatch(setMyLists(response.data));\n        }\n      })\n      .catch(console.log);\n  };\n};\n\nexport const createList = (listData) => {\n  return (dispatch) => {\n    const sendableListData = {\n      name: listData.name,\n      description: listData.description,\n      user_id: listData.userId,\n    };\n    return fetch(\"https://thawing-gorge-41253.herokuapp.com/api/v1/lists\", {\n      credentials: \"include\",\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(sendableListData),\n    })\n      .then((res) => res.json())\n      .then((response) => {\n        if (response.error) {\n          alert(response.error);\n        } else {\n          dispatch(addList(response.data));\n          dispatch(resetListForm());\n          history.push(`/lists/${response.data.id}`);\n        }\n      })\n      .catch(console.log);\n  };\n};\n\nexport const updateList = (listData) => {\n  return (dispatch) => {\n    const sendableListData = {\n      name: listData.name,\n      description: listData.description,\n    };\n    return fetch(\n      `https://thawing-gorge-41253.herokuapp.com/api/v1/lists/${listData.listId}`,\n      {\n        credentials: \"include\",\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(sendableListData),\n      }\n    )\n      .then((res) => res.json())\n      .then((response) => {\n        if (response.error) {\n          alert(response.error);\n        } else {\n          dispatch(updateListSuccess(response.data));\n          history.push(`/lists/${response.data.id}`);\n          // Go somewhere else ---> list show\n          // add the new list to the store\n        }\n      })\n      .catch(console.log);\n  };\n};\n\nexport const deleteList = (listId) => {\n  return (dispatch) => {\n    return fetch(\n      `https://thawing-gorge-41253.herokuapp.com/api/v1/lists/${listId}`,\n      {\n        credentials: \"include\",\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    )\n      .then((res) => res.json())\n      .then((response) => {\n        if (response.error) {\n          alert(response.error);\n        } else {\n          dispatch(deleteListSuccess(listId));\n          history.push(\"/lists\");\n          // Go somewhere else ---> list show\n          // add the new list to the store\n        }\n      })\n      .catch(console.log);\n  };\n};\n","import {\n  SET_CURRENT_USER,\n  GET_USER_LOCATION,\n  CLEAR_CURRENT_USER,\n} from \"./types\";\nimport { getMyLists, clearLists } from \"./myLists\";\nimport { getMyMeals } from \"./myMeals\";\nimport history from \"../history\";\n\nexport const getUserLocation = (location) => {\n  return {\n    type: GET_USER_LOCATION,\n    location,\n  };\n};\n\nexport const setCurrentUser = (user) => {\n  return {\n    type: SET_CURRENT_USER,\n    user,\n  };\n};\n\nexport const clearCurrentUser = () => {\n  return {\n    type: CLEAR_CURRENT_USER,\n  };\n};\n\nexport const getUserCoords = () => {\n  return (dispatch) => {\n    return window.navigator.geolocation.getCurrentPosition(\n      (position) =>\n        dispatch(\n          getUserLocation({\n            latitude: position.coords.latitude,\n            longitude: position.coords.longitude,\n          })\n        ),\n      (err) => console.log({ errorMessage: err.message })\n    );\n  };\n};\n\nexport const login = (credentials) => {\n  return (dispatch) => {\n    return fetch(\"https://thawing-gorge-41253.herokuapp.com/api/v1/login\", {\n      credentials: \"include\",\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(credentials),\n    })\n      .then((res) => res.json())\n      .then((user) => {\n        if (user.error) {\n          alert(user.error);\n        } else {\n          dispatch(setCurrentUser(user));\n          dispatch(getMyLists());\n          dispatch(getMyMeals());\n          history.push(\"/\");\n          // Get User location\n        }\n      })\n      .catch(console.log);\n  };\n};\n\nexport const logout = () => {\n  return (dispatch) => {\n    dispatch(clearCurrentUser());\n    dispatch(clearLists());\n    return fetch(\"https://thawing-gorge-41253.herokuapp.com/api/v1/logout\", {\n      credentials: \"include\",\n      method: \"DELETE\",\n    });\n  };\n};\n\nexport const signup = (credentials) => {\n  return (dispatch) => {\n    return fetch(\"https://thawing-gorge-41253.herokuapp.com/api/v1/signup\", {\n      credentials: \"include\",\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(credentials),\n    })\n      .then((res) => res.json())\n      .then((user) => {\n        if (user.error) {\n          alert(user.error);\n        } else {\n          dispatch(setCurrentUser(user));\n          dispatch(getMyLists());\n          dispatch(getMyMeals());\n          history.push(\"/\");\n          // Get User location\n        }\n      })\n      .catch(console.log);\n  };\n};\n\nexport const getCurrentUser = () => {\n  return (dispatch) => {\n    return fetch(\n      \"https://thawing-gorge-41253.herokuapp.com/api/v1/get_current_user\",\n      {\n        credentials: \"include\",\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    )\n      .then((res) => res.json())\n      .then((response) => {\n        if (response.error) {\n          console.log(response.error);\n        } else {\n          dispatch(setCurrentUser(response));\n          dispatch(getMyLists());\n          dispatch(getMyMeals());\n        }\n      })\n      .catch(console.log);\n  };\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../../actions/currentUser\";\nimport history from \"../../history\";\n\nconst Logout = ({ logout }) => {\n  const handleLogout = (event) => {\n    event.preventDefault();\n    logout();\n    history.push(\"/\");\n  };\n\n  return (\n    <div className=\"ui container\">\n      <div className=\"row\">\n        <div className=\"col-md-8 col-md-offset-2\">\n          <div className=\"panel panel-default\">\n            <div className=\"panel-body\">\n              <form className=\"ui form\" onSubmit={handleLogout}>\n                <button type=\"submit\" className=\"ui button negative\">\n                  Logout\n                </button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(null, { logout })(Logout);\n","import React from \"react\";\nimport { NavLink, Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Logout from \"./user/Logout\";\nimport { logout } from \"../actions/currentUser\";\nimport history from \"../history\";\n\nclass Header extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      isClicked: false,\n    };\n  }\n\n  handleMenuToggle = () => {\n    this.setState({\n      isClicked: !this.state.isClicked,\n    });\n  };\n\n  handleLogout = () => {\n    this.props.logout();\n    history.push(\"/\");\n\n    this.setState({\n      isClicked: !this.state.isClicked,\n    });\n  };\n\n  render() {\n    if (this.props.currentUser && !this.state.isClicked) {\n      return (\n        <div className=\"ui teal seven item menu\">\n          <button onClick={this.handleMenuToggle} className=\"toggle\">\n            <i className=\"angle double down icon\"></i>\n          </button>\n\n          <div className=\"header item navitem\">\n            <NavLink\n              style={{\n                color: \"rgb(250, 239, 135, 0.967)\",\n                fontSize: \"25px\",\n                borderStyle: \"double\",\n              }}\n              exact\n              to=\"\"\n            >\n              FoodMood\n            </NavLink>\n          </div>\n\n          <div className=\"header item navitem\">\n            <NavLink exact activeClassName=\"active\" to=\"/lists\">\n              <h4>Lists</h4>\n            </NavLink>\n          </div>\n\n          <div className=\"header item navitem\">\n            <NavLink exact activeClassName=\"active\" to=\"/lists/new\">\n              <h4>Create List</h4>\n            </NavLink>\n          </div>\n\n          <div className=\"header item navitem\">\n            <NavLink exact activeClassName=\"active\" to=\"/restaurants\">\n              <h4>Search Restaurants</h4>\n            </NavLink>\n          </div>\n\n          <div className=\"header item navitem\">\n            <NavLink exact activeClassName=\"active\" to=\"/recipes\">\n              <h4>Search Recipes</h4>\n            </NavLink>\n          </div>\n\n          <div className=\"right menu\">\n            {this.props.loggedIn ? (\n              <div className=\"ui item logout\">\n                <Logout />\n              </div>\n            ) : null}\n          </div>\n        </div>\n      );\n    } else if (this.props.currentUser && this.state.isClicked) {\n      return (\n        <div className=\"ui grid\">\n          <div className=\"four wide column\">\n            <div className=\"ui vertical fluid tabular menu\">\n              <Link\n                onClick={this.handleMenuToggle}\n                exact\n                to=\"/lists\"\n                className=\"item\"\n              >\n                Lists\n              </Link>\n              <Link\n                onClick={this.handleMenuToggle}\n                exact\n                to=\"/lists/new\"\n                className=\"item\"\n              >\n                Create List\n              </Link>\n              <Link\n                onClick={this.handleMenuToggle}\n                exact\n                to=\"/restaurants\"\n                className=\"item\"\n              >\n                Browse Restaurants\n              </Link>\n              <Link\n                onClick={this.handleMenuToggle}\n                exact\n                to=\"/recipes\"\n                className=\"item\"\n              >\n                Browse Recipes\n              </Link>\n              <button onClick={this.handleLogout} className=\"ui negative\">\n                Logout\n              </button>\n            </div>\n          </div>\n        </div>\n      );\n    } else if (!this.props.currentUser && !this.state.isClicked) {\n      return (\n        <div className=\"ui teal one item menu\">\n          {/* <button onClick={this.handleMenuToggle} className=\"toggle\"><i className=\"left tasks icon\"></i></button> */}\n\n          <div className=\"header\">\n            <h1>\n              Welcome to FoodMood, please <Link to=\"/login\">Login</Link> into\n              your account or <Link to=\"/signup\">Signup</Link>\n            </h1>\n          </div>\n\n          <div className=\"right menu\">\n            <strong className=\"logo\">FoodMood</strong>\n          </div>\n\n          <div className=\"right menu\">\n            {this.props.loggedIn ? (\n              <div className=\"ui item logout\">\n                <Logout />\n              </div>\n            ) : null}\n          </div>\n        </div>\n      );\n    }\n    // else {\n    //   return (\n    //     <div className=\"ui grid\">\n    //       <div className=\"four wide column\">\n    //         <div className=\"ui vertical fluid tabular menu\">\n    //           <div><h3><Link onClick={this.handleMenuToggle} to=\"/login\">Log In</Link></h3></div>\n    //           <div><h3><Link onClick={this.handleMenuToggle} to=\"/signup\">Sign Up</Link></h3></div>\n    //         </div>\n    //     </div>\n    //     </div>\n    //   )\n    // }\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    currentUser: state.currentUser,\n    loggedIn: !!state.currentUser,\n  };\n};\n\nexport default connect(mapStateToProps, { logout })(Header);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { login } from \"../../actions/currentUser\";\n\nclass AuthForm extends React.Component {\n  state = {\n    email: \"\",\n    password: \"\",\n  };\n\n  handleOnChange = (event) => {\n    const { value, name } = event.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleOnSubmit = (event) => {\n    event.preventDefault();\n    this.props.login(this.state);\n  };\n\n  render() {\n    return (\n      <div className=\"ui container\">\n        <div className=\"row\">\n          <div className=\"col-md-8 col-md-offset-2\">\n            <div className=\"panel panel-default\">\n              <div className=\"panel-body\">\n                <form className=\"ui form\" onSubmit={this.handleOnSubmit}>\n                  <div className=\"field\">\n                    <label>Email:</label>\n                    <input\n                      type=\"text\"\n                      placeholder=\"Email\"\n                      value={this.state.email}\n                      name=\"email\"\n                      onChange={this.handleOnChange}\n                      autoComplete=\"off\"\n                    />\n                  </div>\n                  <div className=\"field\">\n                    <label>Password:</label>\n                    <input\n                      type=\"password\"\n                      placeholder=\"Password\"\n                      value={this.state.password}\n                      name=\"password\"\n                      onChange={this.handleOnChange}\n                    />\n                  </div>\n                  <button type=\"submit\" className=\"ui button primary\">\n                    Submit\n                  </button>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(null, { login })(AuthForm);\n","import React from \"react\";\nimport { signup } from \"../../actions/currentUser\";\nimport { connect } from \"react-redux\";\n\nclass SignUp extends React.Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    password: \"\",\n  };\n\n  handleOnChange = (event) => {\n    const { value, name } = event.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleOnSubmit = (event) => {\n    event.preventDefault();\n    this.props.signup(this.state);\n  };\n\n  render() {\n    return (\n      <div className=\"ui container\">\n        <div className=\"row\">\n          <div className=\"col-md-8 col-md-offset-2\">\n            <div className=\"panel panel-default\">\n              <div className=\"panel-body\">\n                <form className=\"ui form\" onSubmit={this.handleOnSubmit}>\n                  <div className=\"field\">\n                    <label>Name:</label>\n                    <input\n                      type=\"text\"\n                      placeholder=\"Name\"\n                      value={this.state.name}\n                      name=\"name\"\n                      onChange={this.handleOnChange}\n                      autoComplete=\"off\"\n                      required\n                    />\n                  </div>\n                  <div className=\"field\">\n                    <label>Email:</label>\n                    <input\n                      type=\"text\"\n                      placeholder=\"Email\"\n                      value={this.state.email}\n                      name=\"email\"\n                      onChange={this.handleOnChange}\n                      autoComplete=\"off\"\n                      required\n                    />\n                  </div>\n                  <div className=\"field\">\n                    <label>Password:</label>\n                    <input\n                      type=\"password\"\n                      placeholder=\"password\"\n                      value={this.state.password}\n                      name=\"password\"\n                      onChange={this.handleOnChange}\n                      autoComplete=\"off\"\n                      required\n                    />\n                  </div>\n                  <button type=\"submit\" className=\"ui button primary\">\n                    Submit\n                  </button>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(null, { signup })(SignUp);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nclass MyLists extends React.Component {\n  // constructor() {\n  //   super()\n\n  //   this.state = {\n  //     likesCount: {\n  //       \"39\": 1\n  //     }\n  //   }\n  // }\n\n  // incrementLikes = (id) => {\n  //   const prevLikes = this.state.likesCount[id]\n  //   if(prevLikes) {\n  //     this.setState({\n  //       likesCount: {...this.state.likesCount, [id]: prevLikes + 1 }\n  //     })\n  //   } else {\n  //     this.setState({\n  //       likesCount: {...this.state.likesCount, [id]: 1}\n  //     })\n  //   }\n  // }\n\n  render() {\n    const listCards =\n      this.props.lists.length > 0 ? (\n        this.props.lists.map((l) => (\n          <div className=\"item\" key={l.id}>\n            <i className=\"large list icon\"></i>\n            <div className=\"content\">\n              <div className=\"header\">\n                <h5>\n                  <Link to={`/lists/${l.id}`}>{l.attributes.name}</Link>\n                </h5>\n              </div>\n              <div className=\"description\">{l.attributes.description}</div>\n              {/* <button className=\"likes\" onClick={() => this.incrementLikes(l.id)}>{this.state.likesCount[l.id]} Likes</button> */}\n            </div>\n          </div>\n        ))\n      ) : (\n        <h2>Create lists to start adding restaurants and recipes!</h2>\n      );\n\n    return (\n      <div>\n        <div className=\"ui one column grid\">\n          <div className=\"column\">\n            <div className=\"ui fluid card\">\n              <div className=\"content\">\n                <h3>These are your lists:</h3>\n                <br />\n                <div className=\"ui list\">{listCards}</div>\n                <Link className=\"ui button primary\" to=\"/lists/new\">\n                  Create New List\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ myLists }) => {\n  return {\n    lists: myLists,\n  };\n};\n\nexport default connect(mapStateToProps)(MyLists);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nvar footerStyle = {\n  backgroundColor: \"#F8F8F8\",\n  borderTop: \"1px solid #E7E7E7\",\n  textAlign: \"center\",\n  padding: \"20px\",\n  position: \"fixed\",\n  left: \"0\",\n  bottom: \"0\",\n  height: \"60px\",\n  width: \"100%\",\n};\n\nvar phantom = {\n  display: \"block\",\n  padding: \"20px\",\n  height: \"60px\",\n  width: \"100%\",\n};\n\nconst Footer = () => {\n  return (\n    <div>\n      <div className=\"phantom\" />\n      <div className=\"footerStyle\">\n        &copy; by Trejon Stallsworth. Powered by{\" \"}\n        <a\n          rel=\"noopener\"\n          href=\"https://forkify-api.herokuapp.com/api/\"\n          target=\"_blank\"\n          class=\"link\"\n        >\n          Forkify API\n        </a>{\" \"}\n        &{\" \"}\n        <a\n          rel=\"noopener\"\n          href=\"https://www.yelp.com/developers/documentation/v3/business_search\"\n          target=\"_blank\"\n          class=\"link\"\n        >\n          Yelp Businesses Search API\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport MyLists from \"./lists/MyLists\";\nimport Footer from \"./Footer\";\n\nclass Home extends React.Component {\n  render() {\n    return (\n      <div>\n        {!this.props.currentUser ? (\n          <div className=\"ui message\">\n            <div className=\"ui center aligned header\">\n              <br />\n              <h3>\n                A meal app designed to work for you. Enable your location to\n                fully enjoy the features. Organize and keep track of your meal\n                plans, browse recipes or restaurants for inspiration.\n              </h3>\n            </div>\n          </div>\n        ) : (\n          <MyLists />\n        )}\n        <Footer />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ currentUser }) => {\n  return {\n    currentUser,\n  };\n};\n\nexport default connect(mapStateToProps)(Home);\n","import React from \"react\";\nimport { updateListForm } from \"../../actions/listForm\";\nimport { connect } from \"react-redux\";\n\nconst ListForm = ({\n  formData,\n  updateListForm,\n  userId,\n  list,\n  handleSubmit,\n  editMode,\n}) => {\n  const { name, description } = formData;\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    updateListForm(name, value);\n  };\n\n  return (\n    <form\n      className=\"ui form\"\n      onSubmit={(event) => handleSubmit(event, formData)}\n    >\n      <input\n        name=\"name\"\n        onChange={handleChange}\n        value={name}\n        placeholder=\"Name\"\n        autoComplete=\"off\"\n      />\n      <br />\n      <br />\n      <input\n        name=\"description\"\n        onChange={handleChange}\n        value={description}\n        placeholder=\"Description\"\n        autoComplete=\"off\"\n      />\n      <button className=\"ui primary button\" type=\"submit\">\n        {editMode ? \"Update List\" : \"Create List\"}\n      </button>\n    </form>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const userId = state.currentUser ? state.currentUser.currentUser.data.id : \"\";\n  return {\n    formData: state.ListForm,\n    userId,\n  };\n};\n\nexport default connect(mapStateToProps, { updateListForm })(ListForm);\n","import React from \"react\";\nimport { createList } from \"../../actions/myLists\";\nimport { connect } from \"react-redux\";\nimport ListForm from \"./ListForm\";\n\nconst NewListFormWrapper = ({ createList, recipe }) => {\n  const handleSubmit = (event, formData, userId) => {\n    event.preventDefault();\n    createList({\n      ...formData,\n      userId,\n    });\n  };\n\n  return (\n    <div>\n      <ListForm handleSubmit={handleSubmit} />\n    </div>\n  );\n};\n\nexport default connect(null, { createList })(NewListFormWrapper);\n","import React from \"react\";\nimport { updateList, deleteList } from \"../../actions/myLists\";\nimport { setFormDataForEdit, resetListForm } from \"../../actions/listForm\";\nimport { connect } from \"react-redux\";\nimport ListForm from \"./ListForm\";\nimport { Link } from \"react-router-dom\";\n\nclass EditListFormWrapper extends React.Component {\n  componentDidMount() {\n    this.props.list && this.props.setFormDataForEdit(this.props.list);\n  }\n\n  componentDidUpdate(prevProps) {\n    this.props.list &&\n      !prevProps.list &&\n      this.props.setFormDataForEdit(this.props.list);\n  }\n\n  componentWillUnmount() {\n    this.props.resetListForm();\n  }\n\n  handleSubmit = (event, formData, userId) => {\n    const { updateList, list } = this.props;\n    event.preventDefault();\n    updateList({\n      ...formData,\n      listId: list.id,\n      userId,\n    });\n  };\n\n  render() {\n    const { list } = this.props;\n    const listId = list ? list.id : null;\n    return (\n      <div>\n        <>\n          <ListForm editMode handleSubmit={this.handleSubmit} />\n          <br />\n          <Link\n            className=\"ui negative button\"\n            list={list}\n            to={`/lists/delete/${listId}`}\n          >\n            <h5>Delete this list</h5>\n          </Link>\n        </>\n      </div>\n    );\n  }\n}\n\nexport default connect(null, {\n  updateList,\n  setFormDataForEdit,\n  resetListForm,\n  deleteList,\n})(EditListFormWrapper);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nconst Modal = (props) => {\n  return ReactDOM.createPortal(\n    <div className=\"ui dimmer modals visible active\" onClick={props.onDismiss}>\n      <div\n        className=\"ui standard modal visible active\"\n        onClick={(e) => e.stopPropagation()}\n      >\n        <div className=\"header\">{props.title}</div>\n        <div className=\"content\">{props.content}</div>\n        <div className=\"actions\">{props.actions}</div>\n      </div>\n    </div>,\n    document.querySelector(\"#modal\")\n  );\n};\n\nexport default Modal;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport Modal from \"../Modal\";\nimport history from \"../../history\";\nimport { deleteList } from \"../../actions/myLists\";\n\nclass ListDelete extends React.Component {\n  renderActions = () => {\n    return (\n      <>\n        <button\n          className=\"ui button negative\"\n          onClick={() => this.props.deleteList(this.props.list.id)}\n        >\n          Delete\n        </button>\n        <Link to={`/lists/${this.props.list.id}`} className=\"ui button\">\n          Cancel\n        </Link>\n      </>\n    );\n  };\n\n  renderContent = () => {\n    if (!this.props.list) {\n      return \"Are you sure you want to delete this list?\";\n    }\n    return `Are you sure you want to delete the list: ${this.props.list.attributes.name}?`;\n  };\n\n  render() {\n    if (this.props.list) {\n      return (\n        <Modal\n          title=\"Delete List\"\n          content={this.renderContent()}\n          actions={this.renderActions()}\n          onDismiss={() => history.push(`/lists/${this.props.list.id}`)}\n        />\n      );\n    } else {\n      return <div>Loading list</div>;\n    }\n  }\n}\n\nexport default connect(null, { deleteList })(ListDelete);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport Modal from \"../Modal\";\nimport history from \"../../history\";\nimport { deleteMeal } from \"../../actions/myMeals\";\n\nclass MealDelete extends React.Component {\n  renderActions = () => {\n    return (\n      <>\n        <button\n          className=\"ui button negative\"\n          onClick={() => this.props.deleteMeal(this.props.meal.id)}\n        >\n          Delete\n        </button>\n        <Link to={`/meals/${this.props.meal.id}`} className=\"ui button\">\n          Cancel\n        </Link>\n      </>\n    );\n  };\n\n  renderContent = () => {\n    if (!this.props.meal) {\n      return \"Are you sure you want to delete this meal?\";\n    }\n    return `Are you sure you want to delete the meal: ${this.props.meal.attributes.name}?`;\n  };\n\n  render() {\n    if (this.props.meal) {\n      return (\n        <Modal\n          title=\"Delete Meal\"\n          content={this.renderContent()}\n          actions={this.renderActions()}\n          onDismiss={() => history.push(`/meals/${this.props.meal.id}`)}\n        />\n      );\n    } else {\n      return <div>Loading meal</div>;\n    }\n  }\n}\n\nexport default connect(null, { deleteMeal })(MealDelete);\n","import React from \"react\";\nimport { Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport ListCard from \"./components/lists/ListCard\";\nimport MealCard from \"./components/meals/MealCard\";\nimport FetchRestaurants from \"./components/restaurants/FetchRestaurants\";\nimport FetchRecipes from \"./components/recipes/FetchRecipes\";\nimport Header from \"./components/Header\";\nimport Login from \"./components/user/Login\";\nimport Signup from \"./components/user/SignUp\";\nimport MyLists from \"./components/lists/MyLists\";\nimport Home from \"./components/Home\";\nimport history from \"./history\";\nimport { connect } from \"react-redux\";\nimport { getCurrentUser, getUserCoords } from \"./actions/currentUser\";\nimport { setFormDataForEdit } from \"./actions/listForm\";\nimport NewListFormWrapper from \"./components/lists/NewListFormWrapper\";\nimport EditListFormWrapper from \"./components/lists/EditListFormWrapper\";\nimport EditMealFormWrapper from \"./components/meals/EditMealFormWrapper\";\nimport GoogleMaps from \"./apis/GoogleMaps\";\nimport ListDelete from \"./components/lists/ListDelete\";\nimport MealDelete from \"./components/meals/MealDelete\";\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.getCurrentUser();\n    this.props.getUserCoords();\n    window.scrollTo(0, 0);\n  }\n\n  render() {\n    const { loggedIn, lists, meals } = this.props;\n    return (\n      <Router history={history}>\n        <div className=\"app\">\n          {loggedIn ? <Header location={this.props.location} /> : <Header />}\n          <Switch>\n            <Route path=\"/map\" exact component={GoogleMaps} />\n            <Route path=\"/restaurants\" exact component={FetchRestaurants} />\n            <Route path=\"/recipes\" exact component={FetchRecipes} />\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/login\" exact component={Login} />\n            <Route path=\"/signup\" exact component={Signup} />\n            <Route path=\"/lists\" exact component={MyLists} />\n            <Route path=\"/lists/new\" exact component={NewListFormWrapper} />\n            <Route\n              path=\"/lists/:id\"\n              exact\n              render={(props) => {\n                const list = lists.find(\n                  (list) => list.id === props.match.params.id\n                );\n                return <ListCard listId={props.match.params.id} list={list} />;\n              }}\n            />\n            <Route\n              path=\"/lists/:id/edit\"\n              exact\n              render={(props) => {\n                const list = lists.find(\n                  (list) => list.id === props.match.params.id\n                );\n                return <EditListFormWrapper list={list} />;\n              }}\n            />\n            <Route\n              path=\"/lists/delete/:id\"\n              exact\n              render={(props) => {\n                const list = lists.find(\n                  (list) => list.id === props.match.params.id\n                );\n                return <ListDelete list={list} />;\n              }}\n            />\n            <Route\n              path=\"/meals/:id\"\n              exact\n              render={(props) => {\n                const meal = meals\n                  ? meals.find((meal) => meal.id === props.match.params.id)\n                  : null;\n                return <MealCard meal={meal} />;\n              }}\n            />\n            <Route\n              path=\"/meals/:id/edit\"\n              exact\n              render={(props) => {\n                const meal = meals\n                  ? meals.find((meal) => meal.id === props.match.params.id)\n                  : null;\n                return <EditMealFormWrapper meal={meal} />;\n              }}\n            />\n            <Route\n              path=\"/meals/delete/:id\"\n              exact\n              render={(props) => {\n                const meal = meals.find(\n                  (meal) => meal.id === props.match.params.id\n                );\n                return <MealDelete meal={meal} />;\n              }}\n            />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    loggedIn: !!state.currentUser,\n    lists: state.myLists,\n    meals: state.myMeals,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getCurrentUser,\n  setFormDataForEdit,\n  getUserCoords,\n})(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}